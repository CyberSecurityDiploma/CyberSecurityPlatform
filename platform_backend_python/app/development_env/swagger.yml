swagger: "2.0"
info:
  title: Docker Code Executor API
  description: REST API for running user-submitted Python code in isolated Docker containers.
  version: "1.0.0"

host: "localhost:5000"
basePath: "/"
schemes:
  - http

consumes:
  - multipart/form-data
produces:
  - application/json

paths:
  /execute:
    post:
      summary: Upload and execute code inside Docker
      tags:
        - Code Execution
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          type: file
          required: true
          description: Python script to run (e.g. main.py)
      responses:
        200:
          description: Code executed successfully
          schema:
            type: object
            properties:
              session_id:
                type: string
                description: Unique ID of the created execution session
        400:
          description: No file was provided
          schema:
            type: object
            properties:
              error:
                type: string
                example: "No file provided"
        500:
          description: Docker or execution error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
    
  /result/{session_id}:
    get:
      summary: Get logs from execution by session ID
      tags:
        - Code Execution
      parameters:
        - name: session_id
          in: path
          type: string
          required: true
          description: Session ID returned from the /execute endpoint
      responses:
        200:
          description: Execution finished, logs returned
          schema:
            type: object
            properties:
              logs:
                type: string
                description: Output logs from the script execution
        202:
          description: Execution is still running
          schema:
            type: object
            properties:
              status:
                type: string
                example: "still running"
        404:
          description: Session not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Session not found"
        500:
          description: Error while retrieving logs
          schema:
            type: object
            properties:
              error:
                type: string

  /cleanup/{session_id}:
    post:
      summary: Cleanup session and container
      tags:
        - Code Execution
      parameters:
        - name: session_id
          in: path
          type: string
          required: true
          description: ID of the session to be cleaned up
      responses:
        200:
          description: Session stopped and removed successfully
          schema:
            type: object
            properties:
              status:
                type: string
                example: "cleaned up"
        404:
          description: Session not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Session not found"
        500:
          description: Cleanup error
          schema:
            type: object
            properties:
              error:
                type: string

